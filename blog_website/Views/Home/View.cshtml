@model blog_website.Models.BlogPost
@using System.Text
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims;
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "View";
}

<div class="container mt-5">
    <h1 class="mb-4">@Model.Title</h1>

    <div class="mb-4">
        <p><strong>Author:</strong> @Model.Author.UserName</p>
        <p><strong>Posted on:</strong> @Model.CreatedAt.ToString("MMMM dd, yyyy")</p>
        <p><strong>Last updated on:</strong> @Model.LastUpdatedAt?.ToString("MMMM dd, yyyy")</p>
    </div>

    <div class="mb-5">
        <h4>Content</h4>
        <p>@Model.Content</p>
    </div>

    <div>
        <a class="btn btn-secondary" asp-action="Index">Back to List</a>
    </div>

    <hr />

    <div class="mt-5">
        <h4>Comments</h4>
        <div id="comments-section">
            @foreach (var comment in Model.Comments)
            {
                <div class="card mb-3" id="comment-@comment.Id">
                    <div class="card-body">
                        <p><strong>@comment.User.UserName</strong> on @comment.CreatedAt.ToString("MMMM dd, yyyy")</p>
                        <p>@comment.Comment</p>
                        @if(SignInManager.IsSignedIn(User) && User.FindFirstValue(ClaimTypes.NameIdentifier) == comment.UserId)
                        {
                            <button class="btn btn-sm btn-primary edit-comment" data-id="@comment.Id">Edit</button>
                            <button class="btn btn-sm btn-danger delete-comment" data-id="@comment.Id">Delete</button>
                        }
                        else if(SignInManager.IsSignedIn(User) && User.FindFirstValue(ClaimTypes.NameIdentifier) == Model.AuthorId)
                        {
                            <button class="btn btn-sm btn-danger delete-comment" data-id="@comment.Id">Delete</button>
                        }

                    </div>
                </div>
            }
        </div>
    </div>

    @if (SignInManager.IsSignedIn(User))
    {
    <div class="mt-4">
        <h4>Add a Comment</h4>
        <form id="add-comment-form" class="mt-3">
            <input type="hidden" id="blogPostId" value="@Model.Id" />
            <div class="form-group">
                <label for="commentContent" class="control-label">Content</label>
                <textarea id="commentContent" class="form-control"></textarea>
                <span id="commentContentError" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-primary mt-2">Submit</button>
        </form>
    </div>   
    }

</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Add Comment
            $('#add-comment-form').submit(function (e) {
                e.preventDefault();
                var blogPostId = $('#blogPostId').val();
                var content = $('#commentContent').val();

                $.ajax({
                    url: '/comment/addcomment',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ BlogPostId: blogPostId, Comment: content }),
                    success: function (response) {
                        location.reload();
                    },
                    error: function (error) {
                        $('#commentContentError').text(error.responseText);
                    }
                });
            });

            // Edit Comment
            $(document).on('click', '.edit-comment', function () {
                var commentId = $(this).data('id');
                var content = prompt("Edit your comment:");

                if (content) {
                    var blogPostId = $('#blogPostId').val();
                    

                    $.ajax({
                        url: '/comment/editcomment',
                        type: 'PUT',
                        contentType: 'application/json',
                        data: JSON.stringify({ Id: commentId, Comment: content}),
                        success: function (response) {
                            location.reload();
                        },
                        error: function (error) {
                            var errorMessage = error.responseJSON ? error.responseJSON.message : 'An error occurred';
                            alert("Error editing comment: " + errorMessage);
                        }
                    });
                }
            });

            // Delete Comment
            $(document).on('click', '.delete-comment', function () {
                var commentId = $(this).data('id');

                if (confirm("Are you sure you want to delete this comment?")) {
                    $.ajax({
                        url: `/comment/deletecomment/${commentId}`,
                        type: 'DELETE',
                        success: function () {
                            location.reload();
                        },
                        error: function (error) {
                            alert("Error deleting comment: " + error.responseText);
                        }
                    });
                }
            });
        });
    </script>
}

